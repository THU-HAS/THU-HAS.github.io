
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Shuwen Deng is currently the tenure-track assistant professor in Department of Electronic Engineering at Tsinghua University. She received Ph.D. from Yale University, and has been a postdoctoral research fellow at University of Michigan. Her research interests span computer architecture and interconnects, hardware security, and privacy computing. She has published in top conferences, such as ISCA, ASPLOS, HPCA, and CCS. She is the recipient of the 2023 IEEE HOST Best PhD Dissertation Award, the 2020 Google PhD Fellowship in Privacy and Security, and an Elihu Elias Dickerman Fellowship. She has been named a Rising Star in EECS by the University of California Berkeley. Her work has been selected as Top Picks 2021 in Hardware and Embedded Security.\n","date":1760313600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1760313600,"objectID":"9d09509874215871f71481e2880c51c3","permalink":"https://thu-has.github.io/author/shuwen-deng/","publishdate":"2025-06-16T00:00:00Z","relpermalink":"/author/shuwen-deng/","section":"authors","summary":"Shuwen Deng is currently the tenure-track assistant professor in Department of Electronic Engineering at Tsinghua University. She received Ph.D. from Yale University, and has been a postdoctoral research fellow at University of Michigan. Her research interests span computer architecture and interconnects, hardware security, and privacy computing. She has published in top conferences, such as ISCA, ASPLOS, HPCA, and CCS. She is the recipient of the 2023 IEEE HOST Best PhD Dissertation Award, the 2020 Google PhD Fellowship in Privacy and Security, and an Elihu Elias Dickerman Fellowship. She has been named a Rising Star in EECS by the University of California Berkeley. Her work has been selected as Top Picks 2021 in Hardware and Embedded Security.\n","tags":null,"title":"Shuwen Deng","type":"authors"},{"authors":["Yu Jin","Minghong Sun","Dongsheng Wang","Pengfei Qiu","Yinqian Zhang","Shuwen Deng"],"categories":null,"content":"","date":1760313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760313600,"objectID":"9294b574980d64f76abdcdf07df309e8","permalink":"https://thu-has.github.io/publication/2025-ghostcache/","publishdate":"2025-06-16T00:00:00Z","relpermalink":"/publication/2025-ghostcache/","section":"publication","summary":"Microarchitectural side-channel attacks, which have become increasingly prevalent, often rely on high-resolution timers. Emerging processor architectures have sought to mitigate these vulnerabilities by restricting access to fine-grained timers. In this work, we verify the widespread existence of weak coherence in L1 cache on multiple RISC chips, exploit it to bypass this type of mitigation and propose GhostCache, which constructs timer-free and counter-free instruction cache attacks. It introduces two novel and widely applied attack primitives, Modify+Recall and Call+ModifyCall, which are applicable to both ARM and RISC-V architectures and affect 6 commercial and 3 open-source large RISC processors. To the best of our knowledge, we present the first demonstration of timer-free and counter-free cache attacks on RISC-V processors. We also identify undisclosed features, such as the next-three-line prefetching mechanism and direct forwarding of evicted instructions from data cache to instruction cache. Furthermore, we develop four types of covert channels, achieving up to 1.68 MB/s with a 0.01% error rate. For side-channel attacks, GhostCache enables three types of timer-free real-world attacks. The first is an end-to-end website fingerprinting attack, achieving 92.02% accuracy across 100 website classes. The second is a set of kernel leakage attacks, including the discovery of a new Spectre disclosure gadget via a function pointer to leak arbitrary kernel data at 92.91% accuracy. We also launched an attack to reconstruct cryptographic keys. Lastly, we propose potential countermeasures to address these vulnerabilities in both ARM and RISC-V architectures.","tags":[],"title":"GhostCache: Timer- and Counter-Free Cache Attacks Exploiting Weak Coherence on RISC-V and ARM Chips","type":"publication"},{"authors":["Shunyu Mao","Jiajun Luo","Yixin Li","Jiapeng Zhou","Weidong Zhou","Zheng Liu","Teng Ma","Shuwen Deng"],"categories":null,"content":"","date":1750636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1750636800,"objectID":"f12f7191f361c2de4373b34b7e5e574d","permalink":"https://thu-has.github.io/publication/2025-cxl-interplay/","publishdate":"2025-06-16T00:00:00Z","relpermalink":"/publication/2025-cxl-interplay/","section":"publication","summary":"Compute Express Link (CXL) is a promising technology that addresses memory and storage challenges. Despite its advantages, CXL faces performance threats from external interference when co-existing with current memory and storage systems. This interference is under-explored in existing research. To address this, we develop CXL-Interplay, systematically characterizing and analyzing interference from memory and storage systems. To the best of our knowledge, we are the first to characterize CXL interference on real CXL hardware. We also provide reverse-reasoning analysis with performance counters and kernel functions. In the end, we propose and evaluate mitigating solutions.","tags":[],"title":"CXL-Interplay: Unraveling and Characterizing CXL Interference in Modern Computer Systems","type":"publication"},{"authors":["Yunpeng Xu","Yuchen Fan","Teng Ma","Shuwen Deng"],"categories":null,"content":"","date":1750636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1750636800,"objectID":"3f50ba48d82266ac0e51d3c65c0cc574","permalink":"https://thu-has.github.io/publication/2025-ragnar/","publishdate":"2025-06-16T00:00:00Z","relpermalink":"/publication/2025-ragnar/","section":"publication","summary":"With the surge in data computation, Remote Direct Memory Access (RDMA) becomes crucial to offering low-latency and high-throughput communication for data centers, but it faces new security threats. This paper presents Ragnar, a comprehensive suite of hardware-contention-based volatile-channel attacks leveraging the under-explored security vulnerabilities in RDMA hardware. Through comprehensive microbenchmark reverse engineering, we analyze RDMA NICs at multiple granularity levels and then construct covert-channel attacks, achieving 3.2x the bandwidth of state-of-the-art RDMA-targeted attacks on CX-5. We apply side-channel attacks on real-world distributed databases and disaggregated memory, where we successfully fingerprint operations and recover sensitive address data with 95.6% accuracy.","tags":[],"title":"RAGNAR: Exploring Volatile-Channel Vulnerabilities on RDMA NIC","type":"publication"},{"authors":["Kan Zhu","Yilong Zhao","Yufei Gao","Peter Braun","Tanvir Ahmed Khan","Heiner Litz","Baris Kasikci","Shuwen Deng"],"categories":null,"content":"","date":1741046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1741046400,"objectID":"bef158bfa47e2bb537729251035ea4cc","permalink":"https://thu-has.github.io/publication/co-public/2025-from-optimal-to-practical/","publishdate":"2025-02-12T00:00:00Z","relpermalink":"/publication/co-public/2025-from-optimal-to-practical/","section":"publication","summary":"Optimizing the CPU frontend has become crucial for modern processors with intricate instruction decoding logic, espe- cially for efficiently running planet-scale data center applications. Micro-operation (micro-op) cache is a key unit to help improve the energy efficiency of the CPU frontend. Unfortunately, we find that data center applications suffer from frequent micro-op cache misses due to the lack of an effective micro-op cache replacement policy. Developing micro-op cache-specific replacement policies is challenging, as there currently does not exist an optimal theoretical solution akin to Belady’s algorithm for conventional caches. As a result, it is unknown by how much replacement policies can be improved and how to get there. To address these challenges, we introduce FLACK, a new near-optimal offline policy that considers the key features of the micro-op cache, such as variable and disproportional costs of micro-op cache misses and partial hits. We show that FLACK substantially outperforms Belady’s algorithm, thus establishing a new baseline for micro-op cache replacement policies. We then design FURBYS, a practical policy that mimics FLACK via profile-guided methods. FURBYS has three key components to perform cache replacement decisions: (1) it uses profiles of the whole-execution hit/miss behavior, (2) it detects locally (transiently) hot data, and (3) it selectively ignores data with profiled low hit rates. We evaluate FLACK and FURBYS using 11 data center applications and find that FLACK demonstrates an average bound of 30.21% miss reduction, achieving 4.46% greater miss reduction than Belady’s algorithm. Our practical policy, FURBYS, provides 14.34% average miss reduction compared to LRU, which is 1.84× greater than the current state-of-the-art replacement policy, contributing to 3.10% of performance-per- watt improvement for the CPU core. On average, in terms of miss reduction and IPC gain, FURBYS is equivalent to LRU policy on 1.5× micro-op cache sizes (up to 2×), demonstrating the effectiveness of the proposed replacement policy.","tags":[],"title":"From Optimal to Practical: Efficient Micro-op Cache Replacement Policies for Data Center Applications","type":"publication"},{"authors":["Haojie Ye","Yuchen Xia","Yuhan Chen","Kuan-Yu Chen","Yichao Yuan","Shuwen Deng","Baris Kasikci","Trevor Mudge","Nishil Talati"],"categories":null,"content":"","date":1740960000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1740960000,"objectID":"c6f39f7c40aa959e149be2d497df60c8","permalink":"https://thu-has.github.io/publication/co-public/2025-palermo/","publishdate":"2025-02-12T00:00:00Z","relpermalink":"/publication/co-public/2025-palermo/","section":"publication","summary":"Oblivious RAM (ORAM) hides the memory access patterns, enhancing data privacy by preventing attackers from discovering sensitive information based on the sequence of mem- ory accesses. The performance of ORAM is often limited by its inherent trade-off between security and efficiency, as concealing memory access patterns imposes significant computational and memory overhead. While prior works focus on improving the ORAM performance by prefetching and eliminating ORAM requests, we find that their performance is very sensitive to workload locality behavior and incurs additional management overhead caused by the ORAM stash pressure. This paper presents Palermo: a protocol-hardware co-design to improve ORAM performance. The key observation in Palermo is that classical ORAM protocols enforce restrictive dependen- cies between memory operations that result in low memory bandwidth utilization. Palermo introduces a new protocol that overlaps large portions of memory operations, within a single and between multiple ORAM requests, without breaking correctness and security guarantees. Subsequently, we propose an ORAM controller architecture that executes the proposed protocol to service ORAM requests. The hardware is responsible for concur- rently issuing memory requests as well as imposing the necessary dependencies to ensure a consistent view of the ORAM tree across requests. Using a rich workload mix, we demonstrate that Palermo outperforms the RingORAM baseline by 2.9×, on average, incurring a negligible area overhead of 5.78mm2 (less than 2% in 12th generation Intel CPU after technology scaling) and 2.14W without sacrificing security. We further show that Palermo also outperforms the state-of-the-art works PageORAM, PrORAM, and IR-ORAM.","tags":[],"title":"Palermo: Improving the Performance of Oblivious Memory using Protocol-Hardware Co-Design","type":"publication"},{"authors":["Qi Ling","Yujun Liang","Yi Ren","Baris Kasikci","Shuwen Deng"],"categories":null,"content":"acceptance rate: 16.1%\n","date":1740355200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1740355200,"objectID":"3fef16ad5c75d551b0c49f51c980f7f5","permalink":"https://thu-has.github.io/publication/co-public/2025-gadgetmeter/","publishdate":"2025-02-12T00:00:00Z","relpermalink":"/publication/co-public/2025-gadgetmeter/","section":"publication","summary":"Since their emergence in 2018, speculative execution attacks have proven difficult to fully prevent without substantial performance overhead. This is because most mitigations hurt modern processors’ speculative nature, which is essential to many optimization techniques. To address this, numerous scanners have been developed to identify vulnerable code snippets (speculative gadgets) within software applications, allowing mitigations to be applied selectively and thereby minimizing performance degradation. In this paper, we show that existing speculative gadget scanners lack accuracy, often misclassifying gadgets due to limited modeling of timing properties. Instead, we identify another fundamental condition intrinsic to all speculative attacks—the timing requirement as a race condition inside the gadget. Specifically, the attacker must optimize the race condition between speculated authorization and secret leakage to successfully exploit the gadget. Therefore, we introduce GadgetMeter, a framework designed to quantitatively gauge the exploitability of speculative gadgets based on their timing property. We systematically explore the attacker’s power to optimize the race condition inside gadgets (windowing power). A Directed Acyclic Instruction Graph is used to model timing conditions and static analysis and runtime testing are combined to optimize attack patterns and quantify gadget vulnerability. We use GadgetMeter to evaluate gadgets in a wide range of software, including six real-world applications and the Linux kernel. Our result shows that GadgetMeter can accurately identify exploitable speculative gadgets and quantify their vulnerability level, identifying 471 gadgets reported by GadgetMeter works as unexploitable.","tags":[],"title":"GadgetMeter: Quantitatively and Accurately Gauging the Exploitability of Speculative Gadgets","type":"publication"},{"authors":["Jianfeng Wang","Huazhong Yang","Shuwen Deng","Xueqing Li"],"categories":null,"content":"","date":1733097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1733097600,"objectID":"610c6385e964001c95bbd93355bb7a4e","permalink":"https://thu-has.github.io/publication/2024-cimsat/","publishdate":"2025-06-16T00:00:00Z","relpermalink":"/publication/2024-cimsat/","section":"publication","summary":"Compute-in-memory (CiM) architecture is an emerging energyefficient processing paradigm that has attracted widespread attention in AI and Internet of Things (IoT) applications. To protect statically stored sensitive data in CiM, designers have implemented various hardware obfuscation techniques in CiM architectures. However, we observe that existing CiM obfuscation defense strategies are based on straightforward static-key deployment strategies, which pose vulnerabilities from the perspective of key-pruning algorithms for de-obfuscation. \n\nThis work proposes CiMSAT, a CiM de-obfuscation methodology based on Boolean satisfiability (SAT) theory. We conduct the first security analysis specifically tailored to the storage and mixed-signal computing features of CiM architecture, which are two key challenges to de-obfuscate existing state-of-the-art CiM defenses. To model storage units, we innovatively fit and utilize the \"no-inference-value\" obfuscated data for function approximation. To reconstruct mixed-signal circuits, we design bias-tolerant SAT to address the biases introduced by the approximation. With the proposed workflow, we investigate and evaluate all the existing 14 CiM obfuscation architectures using our de-obfuscation framework. We model a total of 176 defense vectors derived from different defense techniques and parameters, among which 158 (90%) can be de-obfuscated and returned the keys within 1,000 seconds and 172 (98%) defenses can be recovered within 105 seconds (approximately one day). We further reload the keys into CiM simulators with obfuscation, achieving an average of 97% and 95% accuracy recovery in widely adopted MNIST and CIFAR-10 classification applications in CiM obfuscation, respectively.","tags":[],"title":"CiMSAT: Exploiting SAT Analysis to Attack Compute-in-Memory Architecture Defenses","type":"publication"},{"authors":["Shunyu Mao","Jiajun Luo","Yixin Li","Jiapeng Zhou","Weidong Zhang","Zheng Liu","Teng Ma","Shuwen Deng"],"categories":null,"content":"","date":1732665600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1732665600,"objectID":"277b0e24fe5c976b47670debb0f85122","permalink":"https://thu-has.github.io/publication/2024-cxl-interference/","publishdate":"2025-02-12T00:00:00Z","relpermalink":"/publication/2024-cxl-interference/","section":"publication","summary":"Compute Express Link (CXL) is a promising technology that addresses memory and storage challenges. Despite its advantages, CXL faces performance threats from external interference when co-existing with current memory and storage systems. This interference is under-explored in existing research. To address this, we develop CXL-Interplay, systematically characterizing and analyzing interference from memory and storage systems. To the best of our knowledge, we are the first to characterize CXL interference on real CXL hardware. We also provide reverse-reasoning analysis with performance counters and kernel functions. In the end, we propose and evaluate mitigating solutions.","tags":[],"title":"CXL-Interference: Analysis and Characterization in Modern Computer Systems","type":"publication"},{"authors":null,"categories":null,"content":"GadgetMeter: Quantitatively and Accurately Gauge the Exploitability of Speculative Gadgets\nOur paper will be presented during NDSS 2025 (Feb. 24th - Feb. 28th).\nFor more details, please see the NDSS 2025 program: https://www.ndss-symposium.org/ndss2025/program/.\nAuthor List:\nQi Ling (Shanghai Jia Tong University) Yujun Liang (Tsinghua University) Yi Ren (Tsinghua University) Baris Kasikci (University of Washington) Shuwen Deng* (Tsinghua University) [*]: corresponding author.\n[1] Qi Ling, Yujun Liang, Yi Ren, Baris Kasikci and Shuwen Deng. NDSS 2025. GadgetMeter: Quantitatively and Accurately Gauge the Exploitability of Speculative Gadgets. In Proceedings of the 2025 Network and Distributed System Security (NDSS’ 25) Symposium, February 24–28, 2025, San Diego, CA, USA.\n","date":1732233600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1732233600,"objectID":"18e07d040f4f4639648b0f69b0825b33","permalink":"https://thu-has.github.io/post/25-2-24-ndss2025/","publishdate":"2024-11-22T00:00:00Z","relpermalink":"/post/25-2-24-ndss2025/","section":"post","summary":"GadgetMeter: Quantitatively and Accurately Gauge the Exploitability of Speculative Gadgets\n","tags":null,"title":"Our paper is accepted at NDSS 2025!","type":"post"},{"authors":["Zongle Huang","Shupei Fan","Chen Tang","Xinyuan Lin","Shuwen Deng","Yongpan Liu"],"categories":null,"content":"","date":1720396800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1720396800,"objectID":"89bcad418fc347a03ea01aee888b8cd7","permalink":"https://thu-has.github.io/publication/co-public/2024-hecaton/","publishdate":"2025-02-12T00:00:00Z","relpermalink":"/publication/co-public/2024-hecaton/","section":"publication","summary":"Large Language Models (LLMs) have achieved remarkable success in various fields, but their training and finetuning require massive computation and memory, necessitating parallelism which introduces heavy communication overheads. Driven by advances in packaging, the chiplet architecture emerges as a potential solution, as it can integrate computing power, as well as utilize on-package links with better signal integrity, higher bandwidth, and lower energy consumption. However, most existing chiplet-related works focus on DNN inference. Directly porting them to LLM training introduces significantly large quantities of DRAM access and network-on-package (NoP) overheads which make state-of-the-art chiplet designs fail, highlighting a research gap. This work proposes Hecaton, a scalable and cost-effective chiplet system for LLM training. We first provide a chiplet architecture with tailored scheduling that can largely reduce DRAM accesses. We further design an efficient distributed training method that reduces NoP communication complexity and relieves constraints on SRAM capacity and layout. Theoretical analysis shows that the entire system achieves weak scaling: as the workload and hardware resources grow proportionally, the computation-to-communication ratio remains nearly constant. Experiments with various workloads and hardware configurations verify the property, and Hecaton achieves 5.29× performance improvement and 3.46× energy reduction on Llama3.1-405B, compared to the tensor parallelism in Megatron. To the best of our knowledge, we propose the first chiplet architecture specifically used for LLM training or finetuning, with guaranteed performance regardless of the problem scale.","tags":[],"title":"Hecaton: Training Large Language Models with Scalable Chiplet Systems","type":"publication"},{"authors":null,"categories":null,"content":"CiMSAT: Exploiting SAT Analysis to Attack Compute-in-Memory Architecture Defenses\nOur paper will be presented on Thursday, October 17th, at Main Conference, 11:45 AM – 12:00 PM, Grand Ballroom Salon E.\nWelcome to the 7-3. HW \u0026amp; CPS: Security of Circuit Design and FPGAs session.\nFor more details, please see the ACM CCS 2024 program: https://www.sigsac.org/ccs/CCS2024/program/schedule.html.\nAuthor List:\nJianfeng Wang (Tsinghua University) Huazhong Yang (Tsinghua University) Shuwen Deng* (Tsinghua University) Xueqing Li* (Tsinghua University) [*]: corresponding author.\n[1] Jianfeng Wang, Huazhong Yang, Shuwen Deng, and Xueqing Li. 2024. CiMSAT: Exploiting SAT Analysis to Attack Compute-in-Memory Architecture Defenses. In Proceedings of the 2024 ACM SIGSAC Conference on Computer and Communications Security (CCS’ 24), October 14–18, 2024, Salt Lake City, UT, USA.\n","date":1720137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1720137600,"objectID":"cd1b52b10e080445a4915001938bf46a","permalink":"https://thu-has.github.io/post/24-10-16-ccs2024/","publishdate":"2024-07-05T00:00:00Z","relpermalink":"/post/24-10-16-ccs2024/","section":"post","summary":"CiMSAT: Exploiting SAT Analysis to Attack Compute-in-Memory Architecture Defenses\n","tags":null,"title":"Our paper is accepted at CCS 2024!","type":"post"},{"authors":["Ferhat Erata","Shuwen Deng","Faisal Zaghloul","Wenjie Xiong","Onur Demir","Jakub Szefer"],"categories":null,"content":" ","date":1674086400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1674086400,"objectID":"61af7eae5172f0ef3ae77640262e887b","permalink":"https://thu-has.github.io/publication/co-public/2023-survey/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/co-public/2023-survey/","section":"publication","summary":"This article surveys the landscape of security verification approaches and techniques for computer systems at various levels: from a software-application level all the way to the physical hardware level. Different existing projects are compared, based on the tools used and security aspects being examined. Since many systems require both hardware and software components to work together to provide the system’s promised security protections, it is not sufficient to verify just the software levels or just the hardware levels in a mutually exclusive fashion. This survey especially highlights system levels that are verified by the different existing projects and presents to the readers the state of the art in hardware and software system security verification. Few approaches come close to providing full-system verification, and there is still much room for improvement.","tags":[],"title":"Survey of Approaches and Techniques for Security Verification of Computer Systems","type":"publication"},{"authors":["Allen Mi","Shuwen Deng","Jakub Szefer"],"categories":null,"content":" ","date":1667779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667779200,"objectID":"6e32d58eb036f4b115bb643b17563515","permalink":"https://thu-has.github.io/publication/co-public/2022-securing-reset/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/co-public/2022-securing-reset/","section":"publication","summary":"A secure reset operation could be an enabling technology that allows sharing of a quantum computer among different users, or among different quantum programs of the same user. Today, the dominant method to erase the qubit state is a full system wipe, which effectively resets all the qubits at the same time. In today's superconducting qubit machines from IBM, for example, a full system wipe takes up to 1000 μs, and it fully erases all information in the system. However, with a full system wipe there is no means for only a few qubits to be cleared and assigned to a new user or program; everything has to be erased at the same time. A secure reset operation could allow resetting only a subset of qubits, and it could be built upon existing (insecure) reset operation available from superconducting qubit machines from IBM, for example. The (insecure) reset operation is available today, which can be used to reset the state of a qubit in a time on the order of 10 μs down to 1 μs. The reset operation is thus much faster than a full system wipe. However, as this work demonstrates, it is possible to leak some information across the (insecure) reset operation as it does not perfectly reset the qubit state between two users or programs who may be sequentially scheduled on the same qubit. Further, crosstalk-like effects are observed where reset behavior of one qubit can be inferred from an adjacent qubit. This work analyzes the existing (insecure) reset operation in order to understand how a secure reset operation could be built upon it. This work then describes the design, implementation, and evaluation of the proposed secure reset operation which can reset qubits without leaking information, and retains a factor of 300 speedup over a full system~wipe.","tags":[],"title":"Securing Reset Operations in NISQ Quantum Computers","type":"publication"},{"authors":null,"categories":null,"content":"","date":1666569600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666569600,"objectID":"1c971112dbbe30360a6a438f51a643e7","permalink":"https://thu-has.github.io/join-us/","publishdate":"2022-10-24T00:00:00Z","relpermalink":"/join-us/","section":"","summary":"","tags":null,"title":"Contact","type":"landing"},{"authors":null,"categories":null,"content":"","date":1666569600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666569600,"objectID":"c1d17ff2b20dca0ad6653a3161942b64","permalink":"https://thu-has.github.io/people/","publishdate":"2022-10-24T00:00:00Z","relpermalink":"/people/","section":"","summary":"","tags":null,"title":"People","type":"landing"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1664150400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1664150400,"objectID":"e303f2f3aaaea039dc61c7ed15990798","permalink":"https://thu-has.github.io/publication/2022-leaky-frontends/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/2022-leaky-frontends/","section":"publication","summary":"This paper evaluates new security threats due to the processor frontend in modern Intel processors. The root causes of the security threats are the multiple paths in the processor frontend that the micro-operations can take: through the MicroInstruction Translation Engine (MITE), through the Decode Stream Buffer (DSB), also called the Micro-operation Cache, or through the Loop Stream Detector (LSD). Each path has its own unique timing and power signatures, which lead to the sideand covert-channel attacks presented in this work. Especially, the switching between the different paths leads to observable timing or power differences which, as this work demonstrates, could be exploited by attackers. Because of the different paths, the switching, and way the components are shared in the frontend between hardware threads, two separate threads are able to be mutually influenced and timing or power can reveal activity on the other thread. The security threats are not limited to multi-threading, and this work further demonstrates new ways for leaking execution information about SGX enclaves or a new in-domain Spectre variant in single-thread setting. Finally, this work demonstrates a new method for fingerprinting the microcode patches of the processor by analyzing the behavior of different paths in the frontend. The findings of this work highlight the security threats associated with the processor frontend and the need for deployment of defenses for the modern processor frontend.","tags":[],"title":"Leaky Frontends: Micro-Op Cache and Processor Frontend Vulnerabilities","type":"publication"},{"authors":["Allen Mi","Shuwen Deng","Jakub Szefer"],"categories":null,"content":" ","date":1654300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654300800,"objectID":"8533cf0760bff36f80a3c9644ab1e69a","permalink":"https://thu-has.github.io/publication/co-public/2021-device-and-locality-specific/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/co-public/2021-device-and-locality-specific/","section":"publication","summary":"Fingerprinting of quantum computer devices is a new threat that poses a challenge to shared, cloud-based quantum computers. Fingerprinting can allow adversaries to map quantum computer infrastructures, uniquely identify cloud-based devices which otherwise have no public identifiers, and it can assist other adversarial attacks. This work shows idle tomography-based fingerprinting method based on crosstalk-induced errors in NISQ quantum computers. The device- and locality-specific fingerprinting results show prediction accuracy values of 99.1% and 95.3%, respectively.","tags":[],"title":"Device- and Locality-Specific Fingerprinting of Shared NISQ Quantum Computers","type":"publication"},{"authors":["Shuwen Deng","Jakub Szefer"],"categories":null,"content":" ","date":1638662400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638662400,"objectID":"781021c6109e8b3a221a32ad414e5fb2","permalink":"https://thu-has.github.io/publication/2021-new-predictor-based-attacks/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2021-new-predictor-based-attacks/","section":"publication","summary":"The microarchitectural state held by predictors in modern processors can leak sensitive information. This is the first work to analyze the security of a special type of predictor, the value predictor, and demonstrate new security attacks. The new attacks bypass all the existing predictor defenses which have not yet considered value predictors as sources of vulnerabilities. This work further shows there are many value predictor attack variants, as derived using our new attack model. This paper highlights the importance of security analysis of processor features before they are realized in silicon, so the security is understood at the design time. ","tags":[],"title":"New Predictor-Based Attacks in Processors","type":"publication"},{"authors":["Shuwen Deng","Nikolay Matyunin","Wenjie Xiong","Stefan Katzenbeisser","Jakub Szefer"],"categories":null,"content":" ","date":1636416000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636416000,"objectID":"4d694cf803c04d2760173bbdbee9283d","permalink":"https://thu-has.github.io/publication/2021-evaluation-of-cache-attacks/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2021-evaluation-of-cache-attacks/","section":"publication","summary":"Timing-based side and covert channels in processor caches continue to be a threat to modern computers. This work shows for the first time, a systematic, large-scale analysis of Arm devices and the detailed results of attacks the processors are vulnerable to. Compared to x86, Arm uses different architectures, microarchitectural implementations, cache replacement policies, etc., which affects how attacks can be launched, and how security testing for the vulnerabilities should be done. To evaluate security, this paper presents security benchmarks specifically developed for testing Arm processors and their caches. The benchmarks are evaluated with sensitivity tests, which examine how sensitive the benchmarks are to having a correct configuration in the testing phase. Further, to evaluate a large number of devices, this work leverages a novel approach of using a cloud-based Arm device testbed for architectural and security research on timing channels and runs the benchmarks on 34 different physical devices. In parallel, there has been much interest in secure caches to defend the various attacks. Consequently, this paper also investigates secure cache architectures using proposed benchmarks. Especially, this paper implements and evaluates secure PL and RF caches, showing the security of PL and RF caches, but also uncovers new weaknesses.","tags":[],"title":"Evaluation of Cache Attacks on Arm Processors and Secure Caches","type":"publication"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1614124800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614124800,"objectID":"1dccdc631c153c0f35a19dd4f4cd1eda","permalink":"https://thu-has.github.io/publication/2021-understanding/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2021-understanding/","section":"publication","summary":"This article discusses a recently developed test suite for checking timingbased vulnerabilities in processor caches, which has revealed the insecurity of today's processor caches. The susceptibility of caches to these vulnerabilities calls for more research on secure processor caches.","tags":[],"title":"Understanding Insecurity of Processor Caches Due to Cache Timing-Based Vulnerabilities","type":"publication"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1584057600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584057600,"objectID":"8a6169d0f36ecde6d33a2f039da081ae","permalink":"https://thu-has.github.io/publication/2020-a-benchmark/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2020-a-benchmark/","section":"publication","summary":"Based on improvements to an existing three-step model for cache timing-based attacks, this work presents 88 Strong types of theoretical timing-based vulnerabilities in processor caches. It also presents and implements a new benchmark suite that can be used to test if processor cache is vulnerable to one of the attacks. In total, there are 1094 automatically-generated test programs which cover the 88 Strong theoretical vulnerabilities. The benchmark suite generates the Cache Timing Vulnerability Score (CTVS) which can be used to evaluate how vulnerable a specific cache implementation is to different attacks. A smaller CTVS means the design is more secure. Evaluation is conducted on commodity Intel and AMD processors and shows how the differences in processor implementations can result in different types of attacks that they are vulnerable to. Further, the benchmarks and the CTVS can be used in simulation to help designers of new secure processors and caches evaluate their designs' susceptibility to cache timing-based attacks.","tags":[],"title":"A Benchmark Suite for Evaluating Caches’ Vulnerability to Timing Attacks","type":"publication"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1574208000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574208000,"objectID":"37485793b491771219333f68bd102585","permalink":"https://thu-has.github.io/publication/2019-analysis-of-secure-caches/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2019-analysis-of-secure-caches/","section":"publication","summary":"Many secure cache designs have been proposed in literature with the aim of mitigating different types of cache timing-based attacks. However, there has so far been no systematic analysis of how these secure cache designs can, or cannot, protect against different types of the timing-based attacks. To provide a means of analyzing the caches, this paper presents a novel three-step modeling approach that is used to exhaustively enumerate all the possible cache timing-based vulnerabilities. The model covers not only attacks that leverage cache accesses or flushes from the local processor core, but also attacks that leverage changes in the cache state due to the cache coherence protocol actions from remote cores. Moreover, both conventional attacks and speculative execution attacks are considered. With the list of all possible cache timing vulnerabilities derived from the three-step model, this work further manually analyzes each of the existing secure cache designs to show which types of timing-based side-channel vulnerabilities each secure cache can mitigate. Based on the security analysis of the existing secure cache designs using the new three-step model, this paper further summarizes different techniques gleaned from the secure cache designs and their ability help mitigate different types of cache timing-based vulnerabilities.","tags":[],"title":"Analysis of Secure Caches using a Three-Step Model for Timing-Based Attacks","type":"publication"},{"authors":["Wen Wang","Bernhard Jungk","Julian Wälde","Shuwen Deng","Naina Gupta","Jakub Szefer","Ruben Niederhagen"],"categories":null,"content":" ","date":1565568000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565568000,"objectID":"cde5aa4975ce6c55da6c624dbd9cdb4e","permalink":"https://thu-has.github.io/publication/co-public/2019-xmss/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/co-public/2019-xmss/","section":"publication","summary":"We describe a software-hardware co-design for the hash-based post-quantum signature scheme XMSS on a RISC-V embedded processor. We provide software optimizations for the XMSS reference implementation for SHA-256 parameter sets and several hardware accelerators that allow to balance area usage and performance based on individual needs. By integrating our hardware accelerators into the RISC-V processor, the version with the best time-area product generates a key pair (that can be used to generate signatures) in 3.44 s, achieving an over speedup in wall-clock time compared to the pure software version. For such a key pair, signature generation takes less than 10 ms and verification takes less than 6 ms, bringing speedups of over and respectively. We tested and measured the cycle count of our implementation on an Intel Cyclone V SoC FPGA. The integration of our XMSS accelerators into an embedded RISC-V processor shows that it is possible to use hash-based post-quantum signatures for a large variety of embedded applications.","tags":[],"title":"XMSS and Embedded Systems - XMSS Hardware Accelerators for RISC-V","type":"publication"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1561161600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561161600,"objectID":"ed74ad593867c0909ebc7ade710ff90b","permalink":"https://thu-has.github.io/publication/2019-secure-tlbs/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2019-secure-tlbs/","section":"publication","summary":"This paper focuses on a new attack vector in modern processors: the timing-based side and covert channel attacks due to the Translation Look-aside Buffers (TLBs). This paper first presents a novel three-step modeling approach that is used to exhaustively enumerate all possible TLB timing-based vulnerabilities. Building on the three-step model, this paper then shows how to automatically generate micro security benchmarks that test for the TLB vulnerabilities. After showing the insecurity of standard TLBs, two new secure TLB designs are presented: a Static-Partition (SP) TLB and a Random-Fill (RF) TLB. The new secure TLBs are evaluated using the Rocket Core implementation of the RISC-V processor architecture enhanced with the two new designs. The three-step model and the security benchmarks are used to analyze the security of the new designs in simulation. Based on the analysis, the proposed secure TLBs can defend not only against the previously publicized attacks but also against other new timing-based attacks in TLBs found using the new three-step model. The performance overhead is evaluated on an FPGA-based setup, and, for example, shows that the RF TLB has less than 10% overhead while defending all the attacks.","tags":[],"title":"Secure TLBs","type":"publication"},{"authors":["Shuwen Deng","Wenjie Xiong","Jakub Szefer"],"categories":null,"content":" ","date":1527897600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527897600,"objectID":"c9653c57ad5987fded8c8cbd78a74a5b","permalink":"https://thu-has.github.io/publication/2018-cache-timing/","publishdate":"2023-09-28T00:00:00Z","relpermalink":"/publication/2018-cache-timing/","section":"publication","summary":"Caches are one of the key features of modern processors as they help to improve memory access timing through caching recently used data. However, due to the timing differences between cache hits and misses, numerous timing side-channels have been discovered and exploited in the past. In this paper, Computation Tree Logic is used to model execution paths of the processor cache logic, and to derive formulas for paths that can lead to timing side-channel vulnerabilities. In total, 28 types of cache attacks are presented: 20 types of which map to attacks previously categorized or discussed in literature, and 8 types are new. Furthermore, to enable practical vulnerability checking, we present a new approach that limits the depth of the execution paths that need to be checked by the Computation Tree Logic, allowing for use of bounded model checking for Computation Tree Logic based cache security verification using the new three-step single-cache-block-access model.","tags":[],"title":"Cache timing side-channel vulnerability checking with computation tree logic","type":"publication"},{"authors":["Guoyong Shi","Hanbin Hu","Shuwen Deng"],"categories":null,"content":" ","date":1489104000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1489104000,"objectID":"87a0d0fdf09232c6949a3113d6f2234f","permalink":"https://thu-has.github.io/publication/co-public/2017-topological/","publishdate":"2024-10-20T00:00:00Z","relpermalink":"/publication/co-public/2017-topological/","section":"publication","summary":"In the field of analog integrated circuit (IC) design, small-signal macromodels play indispensable roles for developing design insight and sizing reference. However, the subject of automatically generating symbolic low-order macromodels in human readable circuit form has not been well studied. Traditionally, work has been published on reducing full-scale symbolic transfer functions to simpler forms but without the guarantee of interpretability. On the other hand, methodologies developed for interconnect circuits (mainly resistor-capacitor-inductor (RCL) networks) are not suitable for analog ICs. In this work, a topological reduction method is introduced that is able to automatically generate interpretable macromodel circuits in symbolic form; that is, the circuit elements in the compact model maintain analytical relations of the parameters of the original full circuit. This type of symbolic macromodel has several benefits that other traditional modeling methods do not offer: First, reusability, namely that designer need not repeatedly generate macromodels for the same circuit even it is re-sized or re-biased; second, interpretability, namely a designer may directly identify circuit parameters (in the original circuit) that are closely related to the dominant frequency characteristics, such as dc gain, gain/phase margins, and dominant poles/zeros. The effectiveness and computational efficiency of the proposed method have been validated by several operational amplifier (opamp) circuit examples.","tags":[],"title":"Topological Approach to Automatic Symbolic Macromodel Generation for Analog Integrated Circuits","type":"publication"}]